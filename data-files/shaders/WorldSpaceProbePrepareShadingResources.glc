#version 430
#extension GL_ARB_texture_query_lod : enable
#extension GL_ARB_compute_variable_group_size : enable
//#include "WorldSpaceProbe_Common.pix"

#ifndef RadianceProbeResolution
#define RadianceProbeResolution 16
#endif

#define ProbeRayCount RadianceProbeResolution * RadianceProbeResolution
#ifndef AtlasResolutionInProbe
#define AtlasResolutionInProbe 128
#endif
#define AtlasResolution RadianceProbeResolution * AtlasResolutionInProbe
#define AllocatedTrace RadianceProbeResolution * AtlasResolutionInProbe

layout( local_size_variable ) in;


layout(std430, binding=0) buffer rayMarker {uvec2 RayMarker[AtlasResolutionInProbe][AtlasResolutionInProbe];};
layout(std430, binding=1) buffer rt0 {vec4 RT0[AllocatedTrace][ProbeRayCount];};
layout(std430, binding=2) buffer rt1 {vec4 RT1[AllocatedTrace][ProbeRayCount];};
layout(std430, binding=3) buffer rt2 {uint RT2[AllocatedTrace][ProbeRayCount];};
layout(std430, binding=4) buffer rt3 {uint RT3[AllocatedTrace][ProbeRayCount];};
layout(std430, binding=5) buffer rt4 {vec4 RT4[AllocatedTrace][ProbeRayCount];};

layout(std430, binding=6) buffer rayHitLocation {vec4 RayHitLocation[AtlasResolution][AtlasResolution];};
layout(std430, binding=7) buffer rayHitNormal {vec4 RayHitNormal[AtlasResolution][AtlasResolution];};
layout(std430, binding=8) buffer rayHitLambertian {uint RayHitLambertian[AtlasResolution][AtlasResolution];};
layout(std430, binding=9) buffer rayHitGlossy {uint RayHitGlossy[AtlasResolution][AtlasResolution];};
layout(std430, binding=10) buffer rayHitEmissive {vec4 RayHitEmissive[AtlasResolution][AtlasResolution];};

layout(r32ui) uniform uimage2D ProbeTraceAllocator;
layout(rgba32f) uniform image2D ProbeTraceData;


void main(){
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	int x = coord.x; int y = coord.y;
	int traceIndex = coord.x;
	if(traceIndex < imageLoad(ProbeTraceAllocator, ivec2(0,0)).r){
	
		vec4 traceData = imageLoad(ProbeTraceData, ivec2(traceIndex, 0));
		int rayID = y;
		uint probeData = floatBitsToUint(traceData.w);
		uint probeIndex = probeData & 0x00ffffff;
		ivec2 markCoord = ivec2(probeIndex % AtlasResolutionInProbe, probeIndex / AtlasResolutionInProbe);
		ivec2 atlasCoord = markCoord * RadianceProbeResolution
			+ ivec2(rayID % RadianceProbeResolution, rayID /RadianceProbeResolution);

		RayHitLocation[atlasCoord.y][atlasCoord.x] = RT0[x][y];
		RayHitNormal[atlasCoord.y][atlasCoord.x] = RT1[x][y];
		RayHitLambertian[atlasCoord.y][atlasCoord.x] = RT2[x][y];
		RayHitGlossy[atlasCoord.y][atlasCoord.x] = RT3[x][y];
		RayHitEmissive[atlasCoord.y][atlasCoord.x] = RT4[x][y];
	}
}
