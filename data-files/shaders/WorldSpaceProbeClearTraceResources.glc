#version 430
#extension GL_ARB_compute_variable_group_size : enable

#define RAY_UNUSED 0xFFFFFFFF
#define PROBE_UNUSED 0xFFFFFFFF
#define AtlasResolutionInProbe 128
#define RadianceProbeResolution 16
#define AtlasResolution AtlasResolutionInProbe * RadianceProbeResolution

layout( local_size_variable ) in;

layout(std430, binding=0) buffer rayMarker {uvec2 RayMarker [AtlasResolutionInProbe][AtlasResolutionInProbe];};
layout(std430, binding=1) buffer rayHitLocation {vec4 RayHitLocation [AtlasResolution][AtlasResolution];};

layout(std430, binding=2) buffer rayHitNormal {vec4 RayHitNormal[AtlasResolution] [AtlasResolution];};
layout(std430, binding=3) buffer rayHitLambertian {uint RayHitLambertian[AtlasResolution] [AtlasResolution];};
layout(std430, binding=4) buffer rayHitGlossy {uint RayHitGlossy[AtlasResolution] [AtlasResolution];};
layout(std430, binding=5) buffer rayHitEmissive {vec4 RayHitEmissive[AtlasResolution] [AtlasResolution];};

layout(rgba32f) uniform image2D RayOrigins; 
layout(rgba32f) uniform image2D RayDirections; 

void main(){
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
	ivec2 markCoord = coord / RadianceProbeResolution;
	RayMarker[markCoord.x][markCoord.y] = uvec2(PROBE_UNUSED, RAY_UNUSED);
	imageStore(RayOrigins, ivec2(coord.x, coord.y), vec4(0));
	imageStore(RayDirections, ivec2(coord.x, coord.y), vec4(0));
	RayHitLocation[coord.x][coord.y] = vec4(0);
	RayHitNormal[coord.x][coord.y] = vec4(0);
	RayHitLambertian[coord.x][coord.y] = 0;
	RayHitGlossy[coord.x][coord.y] = 0;
	RayHitEmissive[coord.x][coord.y] = vec4(0);
}
